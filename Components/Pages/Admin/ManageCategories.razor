@page "/admin/manage-categories"
@using BlazingBlogV2.Data.Entities
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager

<AdminHeader Title="Manage Categories">
    <ActionButtons>
        <button type="button" class="btn btn-sm btn-primary" @onclick="()=>_operatingCategory=new()"> Add new category</button>
    </ActionButtons>
</AdminHeader>

@if (_isLoading)
{
    <Loader LoaderText="@_loadingText"/>
}
@if (_operatingCategory is not null)
{
    <div class="row">
        <div class="col-sm-6"></div>
        <div class="col-sm-6">

            <EditForm Model="_operatingCategory" OnValidSubmit="SaveCategoryAsync">
                <DataAnnotationsValidator/>
                <div class="shadow p-3"
                     style="display: grid; grid-template-columns: auto 150px; grid-column-gap: 15px;">
                    <div>
                        <label class="form-label">Category Name</label>
                        <InputText @bind-Value="_operatingCategory.Name" class="form-control form-control-sm" placeholder="Category name"></InputText>
                        <ValidationMessage For="() => _operatingCategory.Name"/>
                        <label class="form-label mt-2">
                            <InputCheckbox @bind-Value="_operatingCategory.ShowOnNavbar"/>
                            Show on Navbar
                        </label>
                    </div>
                    <div class="d-flex flex-column">
                        <button class="btn btn-sm btn-success mb-2">Save</button>
                        <button class="btn btn-sm btn-danger" @onclick="()=>_operatingCategory =null">Cancle</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
}

<QuickGrid Items="@_categories" class="table table-bordered table-striped table-hover">
    <PropertyColumn Property="@(c=>c.Id)" />
    <PropertyColumn Property="@(c=>c.Name)" />
    <PropertyColumn Property="@(c=>c.Slug)" />
    <TemplateColumn Title="Show On Navbar">
        @if (context.ShowOnNavbar)
        {
            <label class="text-success">
                <input type="checkbox" checked @onchange="@(()=>HandleShowOnNavbarChanged(context))" /> Yes
            </label>
        }
        else
        {
            <label class="text-danger">
                <input type="checkbox" @onchange="@(()=>HandleShowOnNavbarChanged(context))" /> No
            </label>
        }
    </TemplateColumn>
    <TemplateColumn>
        <button class="btn btn-sm btn-primary" @onclick="()=>HandleEditCategory(context)">Edit</button>
    </TemplateColumn>
</QuickGrid>
@code {
    bool _isLoading ;
    string? _loadingText;
    IQueryable<Category> _categories = Enumerable.Empty<Category>().AsQueryable();
    Category? _operatingCategory;
    protected override async Task OnInitializedAsync() => await LoadCategoriesAsync();

    async Task HandleShowOnNavbarChanged(Category category)
    {
        _isLoading = true;
        _loadingText = "Saving changes...";
        category.ShowOnNavbar = !category.ShowOnNavbar;
        await CategoryService.SaveCategoryAsync(category);
        _isLoading = false;
        NavigationManager.Refresh();
    }
    void HandleEditCategory(Category category) => _operatingCategory = category.Clone();

    async Task SaveCategoryAsync()
    {
        if (_operatingCategory is not null)
        {
            _isLoading = true;
            _loadingText = "Saving changes...";
            await CategoryService.SaveCategoryAsync(_operatingCategory!);
            _isLoading = false;
            await LoadCategoriesAsync();
        }
    }

    async Task LoadCategoriesAsync()
    {
        _isLoading = true;
        _loadingText = "Fetching categories...";
        _categories = (await CategoryService.GetCategoriesAsync()).AsQueryable();
        _isLoading = false;
        _operatingCategory = null;
    }
}